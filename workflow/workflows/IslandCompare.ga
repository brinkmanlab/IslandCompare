{
  "a_galaxy_workflow": "true",
  "annotation": "",
  "format-version": "0.1",
  "name": "IslandCompare",
  "steps": {
    "0": {
      "annotation": "",
      "content_id": null,
      "errors": null,
      "id": 0,
      "input_connections": {},
      "inputs": [],
      "label": null,
      "name": "Input dataset collection",
      "outputs": [],
      "position": {
        "left": 209,
        "top": 518.5
      },
      "tool_id": null,
      "tool_state": "{\"collection_type\": \"list\"}",
      "tool_version": null,
      "type": "data_collection_input",
      "uuid": "79e48b23-8fae-45b3-a91d-5d7329698290",
      "workflow_outputs": [
        {
          "label": null,
          "output_name": "output",
          "uuid": "5f39b80f-3b43-44e7-89ef-7b9ccec97dbe"
        }
      ]
    },
    "1": {
      "annotation": "",
      "content_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/biopython_convert/biopython-convert/1.0",
      "errors": null,
      "id": 1,
      "input_connections": {
        "input": {
          "id": 0,
          "output_name": "output"
        }
      },
      "inputs": [],
      "label": "Fasta",
      "name": "BioPython SeqIO Converter",
      "outputs": [
        {
          "name": "output",
          "type": "txt"
        }
      ],
      "position": {
        "left": 548.5,
        "top": 282.5
      },
      "post_job_actions": {
        "HideDatasetActionoutput": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output"
        },
        "RenameDatasetActionoutput": {
          "action_arguments": {
            "newname": "Fasta from #{input}"
          },
          "action_type": "RenameDatasetAction",
          "output_name": "output"
        }
      },
      "tool_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/biopython_convert/biopython-convert/1.0",
      "tool_state": "{\"info\": \"\\\"false\\\"\", \"__page__\": null, \"__rerun_remap_job_id__\": null, \"split\": \"\\\"false\\\"\", \"query\": \"\\\"[?!(features[?type==`source`].qualifiers.plasmid)] | [0]\\\"\", \"input\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\", \"output_type\": \"\\\"fasta\\\"\", \"bioperl\": \"\\\"false\\\"\"}",
      "tool_version": "1.0",
      "type": "tool",
      "uuid": "bd17efa3-b602-4c18-ac97-4ff088267d03",
      "workflow_outputs": []
    },
    "2": {
      "annotation": "",
      "content_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/biopython_convert/biopython-convert/1.0",
      "errors": null,
      "id": 2,
      "input_connections": {
        "input": {
          "id": 0,
          "output_name": "output"
        }
      },
      "inputs": [],
      "label": "Genbank",
      "name": "BioPython SeqIO Converter",
      "outputs": [
        {
          "name": "output",
          "type": "txt"
        }
      ],
      "position": {
        "left": 550.5,
        "top": 537.5
      },
      "post_job_actions": {
        "HideDatasetActionoutput": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output"
        },
        "RenameDatasetActionoutput": {
          "action_arguments": {
            "newname": "Genbank from #{input}"
          },
          "action_type": "RenameDatasetAction",
          "output_name": "output"
        }
      },
      "tool_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/biopython_convert/biopython-convert/1.0",
      "tool_state": "{\"info\": \"\\\"false\\\"\", \"__page__\": null, \"__rerun_remap_job_id__\": null, \"split\": \"\\\"false\\\"\", \"query\": \"\\\"[?!(features[?type==`source`].qualifiers.plasmid)] | [0]\\\"\", \"input\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\", \"output_type\": \"\\\"genbank\\\"\", \"bioperl\": \"\\\"false\\\"\"}",
      "tool_version": "1.0",
      "type": "tool",
      "uuid": "15a2207c-06cc-46a3-82ca-201ab3f143b9",
      "workflow_outputs": []
    },
    "3": {
      "annotation": "",
      "content_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/biopython_convert/biopython-convert/1.0",
      "errors": null,
      "id": 3,
      "input_connections": {
        "input": {
          "id": 0,
          "output_name": "output"
        }
      },
      "inputs": [],
      "label": "Embl",
      "name": "BioPython SeqIO Converter",
      "outputs": [
        {
          "name": "output",
          "type": "txt"
        }
      ],
      "position": {
        "left": 555.5,
        "top": 813.5
      },
      "post_job_actions": {
        "HideDatasetActionoutput": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output"
        },
        "RenameDatasetActionoutput": {
          "action_arguments": {
            "newname": "Embl from #{input}"
          },
          "action_type": "RenameDatasetAction",
          "output_name": "output"
        }
      },
      "tool_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/biopython_convert/biopython-convert/1.0",
      "tool_state": "{\"info\": \"\\\"false\\\"\", \"__page__\": null, \"__rerun_remap_job_id__\": null, \"split\": \"\\\"false\\\"\", \"query\": \"\\\"[?!(features[?type==`source`].qualifiers.plasmid)] | [0]\\\"\", \"input\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\", \"output_type\": \"\\\"embl\\\"\", \"bioperl\": \"\\\"true\\\"\"}",
      "tool_version": "1.0",
      "type": "tool",
      "uuid": "ff63521f-35e1-497d-ad15-7883e16313c2",
      "workflow_outputs": []
    },
    "4": {
      "annotation": "",
      "content_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_sed_tool/1.1.1",
      "errors": null,
      "id": 4,
      "input_connections": {
        "infile": {
          "id": 1,
          "output_name": "output"
        }
      },
      "inputs": [],
      "label": "Scrub version from ID",
      "name": "Text transformation",
      "outputs": [
        {
          "name": "output",
          "type": "input"
        }
      ],
      "position": {
        "left": 909,
        "top": 274.5
      },
      "post_job_actions": {
        "ChangeDatatypeActionoutput": {
          "action_arguments": {
            "newtype": "fasta"
          },
          "action_type": "ChangeDatatypeAction",
          "output_name": "output"
        },
        "HideDatasetActionoutput": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output"
        },
        "RenameDatasetActionoutput": {
          "action_arguments": {
            "newname": "Scrub version id from #{infile}"
          },
          "action_type": "RenameDatasetAction",
          "output_name": "output"
        }
      },
      "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_sed_tool/1.1.1",
      "tool_shed_repository": {
        "changeset_revision": "a6f147a050a2",
        "name": "text_processing",
        "owner": "bgruening",
        "tool_shed": "toolshed.g2.bx.psu.edu"
      },
      "tool_state": "{\"adv_opts\": \"{\\\"__current_case__\\\": 0, \\\"adv_opts_selector\\\": \\\"basic\\\"}\", \"__page__\": null, \"__rerun_remap_job_id__\": null, \"code\": \"\\\"s/^(>[^\\\\\\\\.[:space:]]+)\\\\\\\\.[^[:space:]]+/\\\\\\\\1/\\\"\", \"infile\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\"}",
      "tool_version": "1.1.1",
      "type": "tool",
      "uuid": "a85099c7-9c31-49df-8b4a-d82fc8bbbc84",
      "workflow_outputs": []
    },
    "5": {
      "annotation": "",
      "content_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/islandpath/islandpath/1.0.4",
      "errors": null,
      "id": 5,
      "input_connections": {
        "input": {
          "id": 3,
          "output_name": "output"
        }
      },
      "inputs": [],
      "label": "IslandPath-DIMOB",
      "name": "IslandPath",
      "outputs": [
        {
          "name": "output",
          "type": "gff"
        }
      ],
      "position": {
        "left": 975.5,
        "top": 930.5
      },
      "post_job_actions": {
        "HideDatasetActionoutput": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output"
        }
      },
      "tool_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/islandpath/islandpath/1.0.4",
      "tool_state": "{\"input\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\", \"__rerun_remap_job_id__\": null, \"__page__\": null}",
      "tool_version": "1.0.4",
      "type": "tool",
      "uuid": "87fc5cbe-9fc8-4975-afda-b801bf4a7eb5",
      "workflow_outputs": []
    },
    "6": {
      "annotation": "",
      "content_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/colombo/sigihmm/3.8.0",
      "errors": null,
      "id": 6,
      "input_connections": {
        "input": {
          "id": 3,
          "output_name": "output"
        }
      },
      "inputs": [
        {
          "description": "runtime parameter for tool SigiHMM",
          "name": "cut"
        }
      ],
      "label": "SigiHMM",
      "name": "SigiHMM",
      "outputs": [
        {
          "name": "output",
          "type": "embl"
        },
        {
          "name": "gff",
          "type": "gff"
        }
      ],
      "position": {
        "left": 972.5,
        "top": 1085.5
      },
      "post_job_actions": {
        "HideDatasetActiongff": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "gff"
        },
        "HideDatasetActionoutput": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output"
        }
      },
      "tool_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/colombo/sigihmm/3.8.0",
      "tool_state": "{\"__page__\": null, \"cut\": \"{\\\"__class__\\\": \\\"RuntimeValue\\\"}\", \"join\": \"\\\"3\\\"\", \"outlier\": \"\\\"false\\\"\", \"__rerun_remap_job_id__\": null, \"phx\": \"\\\"true\\\"\", \"input\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\", \"sens\": \"\\\"0.7\\\"\"}",
      "tool_version": "3.8.0",
      "type": "tool",
      "uuid": "6492875e-97f5-4898-91d8-ee830840b0fe",
      "workflow_outputs": []
    },
    "7": {
      "annotation": "",
      "content_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/awkscript/awkscript/1.0",
      "errors": "Tool is not installed",
      "id": 7,
      "input_connections": {
        "infiles_0|infile": {
          "id": 4,
          "output_name": "output"
        }
      },
      "inputs": [],
      "label": "Extract sequence names",
      "name": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/awkscript/awkscript/1.0",
      "outputs": [],
      "position": {
        "left": 963.1666870117188,
        "top": 457.1666717529297
      },
      "post_job_actions": {
        "ChangeDatatypeActionoutfile": {
          "action_arguments": {
            "newtype": "txt"
          },
          "action_type": "ChangeDatatypeAction",
          "output_name": "outfile"
        },
        "HideDatasetActionoutfile": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "outfile"
        },
        "RenameDatasetActionoutfile": {
          "action_arguments": {
            "newname": "Extracted sequence names"
          },
          "action_type": "RenameDatasetAction",
          "output_name": "outfile"
        }
      },
      "tool_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/awkscript/awkscript/1.0",
      "tool_state": "{\"__page__\": null, \"code\": \"\\\"function escape_posix(a) {\\\\n    gsub(\\\\\\\"{\\\\\\\", \\\\\\\"{esc}\\\\\\\", a); # Must be first\\\\n    gsub(\\\\\\\"&\\\\\\\", \\\\\\\"{amp}\\\\\\\", a);\\\\n    gsub(\\\\\\\"/\\\\\\\", \\\\\\\"{slash}\\\\\\\", a);\\\\n    gsub(\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\"{baskslash}\\\\\\\", a);\\\\n    gsub(\\\\\\\"\\\\\\\\\\\\\\\\?\\\\\\\", \\\\\\\"{question}\\\\\\\", a);\\\\n    gsub(\\\\\\\"%\\\\\\\", \\\\\\\"{percent}\\\\\\\", a);\\\\n    gsub(\\\\\\\"\\\\\\\\\\\\\\\\*\\\\\\\", \\\\\\\"{star}\\\\\\\", a);\\\\n    gsub(\\\\\\\":\\\\\\\", \\\\\\\"{colon}\\\\\\\", a);\\\\n    gsub(\\\\\\\"\\\\\\\\\\\\\\\\|\\\\\\\", \\\\\\\"{pipe}\\\\\\\", a);\\\\n    gsub(\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\", \\\\\\\"{dblquot}\\\\\\\", a);\\\\n    gsub(\\\\\\\"<\\\\\\\", \\\\\\\"{lt}\\\\\\\", a);\\\\n    gsub(\\\\\\\">\\\\\\\", \\\\\\\"{gt}\\\\\\\", a);\\\\n    gsub(\\\\\\\"\\\\\\\\\\\\\\\\.\\\\\\\", \\\\\\\"{dot}\\\\\\\", a);\\\\n    gsub(\\\\\\\" \\\\\\\", \\\\\\\"{space}\\\\\\\", a);\\\\n    gsub(\\\\\\\"\\\\\\\\t\\\\\\\", \\\\\\\"{tab}\\\\\\\", a);\\\\n    gsub(\\\\\\\"'\\\\\\\", \\\\\\\"{quot}\\\\\\\", a);\\\\n    return a;\\\\n}\\\\n\\\\nmatch($0, /^>([^ ]+)/, a) {\\\\n    name=escape_posix(a[1]);\\\\n    if (name in names) nextfile;\\\\n    names[name] = true;\\\\n    print tool_input_id, name;\\\\n    nextfile \\\\n}\\\"\", \"last\": \"\\\"false\\\"\", \"infiles\": \"[{\\\"__index__\\\": 0, \\\"infile\\\": {\\\"__class__\\\": \\\"ConnectedValue\\\"}}]\", \"envs\": \"[]\", \"__rerun_remap_job_id__\": null, \"infile\": \"{\\\"__class__\\\": \\\"RuntimeValue\\\"}\"}",
      "tool_version": "1.1.1",
      "type": "tool",
      "uuid": "87b79ee3-ab03-4765-a676-308d6b2789f8",
      "workflow_outputs": []
    },
    "8": {
      "annotation": "",
      "content_id": "toolshed.g2.bx.psu.edu/repos/card/rgi/rgi/4.2.2",
      "errors": null,
      "id": 8,
      "input_connections": {
        "input_sequence": {
          "id": 4,
          "output_name": "output"
        }
      },
      "inputs": [],
      "label": "Identify AMR genes",
      "name": "Resistance Gene Identifier (RGI)",
      "outputs": [
        {
          "name": "report",
          "type": "json"
        },
        {
          "name": "summary",
          "type": "tabular"
        }
      ],
      "position": {
        "left": 3205,
        "top": 866.5
      },
      "post_job_actions": {
        "HideDatasetActionreport": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "report"
        },
        "HideDatasetActionsummary": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "summary"
        }
      },
      "tool_id": "toolshed.g2.bx.psu.edu/repos/card/rgi/rgi/4.2.2",
      "tool_shed_repository": {
        "changeset_revision": "715bc9aeef69",
        "name": "rgi",
        "owner": "card",
        "tool_shed": "toolshed.g2.bx.psu.edu"
      },
      "tool_state": "{\"__page__\": null, \"alignment_tool\": \"\\\"diamond\\\"\", \"db_opts\": \"{\\\"__current_case__\\\": 0, \\\"db_opts_selector\\\": \\\"default\\\", \\\"rgi_db_hist\\\": \\\"\\\", \\\"rgi_db_local\\\": \\\"\\\"}\", \"input_type\": \"\\\"contig\\\"\", \"include_loose\": \"\\\"false\\\"\", \"low_quality\": \"\\\"false\\\"\", \"input_sequence\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\", \"data\": \"\\\"NA\\\"\", \"__rerun_remap_job_id__\": null}",
      "tool_version": "4.2.2",
      "type": "tool",
      "uuid": "cbf0fb90-e3c0-4e09-ac2e-3617e0e8aeb4",
      "workflow_outputs": []
    },
    "9": {
      "annotation": "",
      "content_id": "__FILTER_FAILED_DATASETS__",
      "errors": null,
      "id": 9,
      "input_connections": {
        "input": {
          "id": 6,
          "output_name": "output"
        }
      },
      "inputs": [],
      "label": null,
      "name": "Filter failed",
      "outputs": [
        {
          "name": "output",
          "type": "input"
        }
      ],
      "position": {
        "left": 1132.1666870117188,
        "top": 1326.1666870117188
      },
      "post_job_actions": {
        "HideDatasetActionoutput": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output"
        }
      },
      "tool_id": "__FILTER_FAILED_DATASETS__",
      "tool_state": "{\"input\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\", \"__rerun_remap_job_id__\": null, \"__page__\": null}",
      "tool_version": "1.0.0",
      "type": "tool",
      "uuid": "de9c97a8-733c-41d9-89c1-0ade45bcffe6",
      "workflow_outputs": []
    },
    "10": {
      "annotation": "",
      "content_id": "__FILTER_FAILED_DATASETS__",
      "errors": null,
      "id": 10,
      "input_connections": {
        "input": {
          "id": 6,
          "output_name": "gff"
        }
      },
      "inputs": [],
      "label": null,
      "name": "Filter failed",
      "outputs": [
        {
          "name": "output",
          "type": "input"
        }
      ],
      "position": {
        "left": 1136.1666870117188,
        "top": 1450.1666259765625
      },
      "post_job_actions": {
        "HideDatasetActionoutput": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output"
        }
      },
      "tool_id": "__FILTER_FAILED_DATASETS__",
      "tool_state": "{\"input\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\", \"__rerun_remap_job_id__\": null, \"__page__\": null}",
      "tool_version": "1.0.0",
      "type": "tool",
      "uuid": "e5266ad8-3ff5-40dc-9cc4-9eb586f2249e",
      "workflow_outputs": []
    },
    "11": {
      "annotation": "",
      "content_id": "Cut1",
      "errors": null,
      "id": 11,
      "input_connections": {
        "input": {
          "id": 7,
          "output_name": "outfile"
        }
      },
      "inputs": [],
      "label": "Cut identifiers from collection list",
      "name": "Cut",
      "outputs": [
        {
          "name": "out_file1",
          "type": "tabular"
        }
      ],
      "position": {
        "left": 959.1666870117188,
        "top": 742.1666870117188
      },
      "post_job_actions": {
        "HideDatasetActionout_file1": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "out_file1"
        }
      },
      "tool_id": "Cut1",
      "tool_state": "{\"columnList\": \"\\\"c1\\\"\", \"input\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\", \"delimiter\": \"\\\"T\\\"\", \"__rerun_remap_job_id__\": null, \"__page__\": null}",
      "tool_version": "1.0.2",
      "type": "tool",
      "uuid": "47d26984-76cb-4293-80e2-ac840f0af6b1",
      "workflow_outputs": []
    },
    "12": {
      "annotation": "Also remove garbage Sigi appends to id",
      "content_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/awkscript/awkscript/1.0",
      "errors": "Tool is not installed",
      "id": 12,
      "input_connections": {
        "infile": {
          "id": 9,
          "output_name": "output"
        },
        "infiles_0|infile": {
          "id": 10,
          "output_name": "output"
        }
      },
      "inputs": [],
      "label": "Collapse Sigi Islands",
      "name": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/awkscript/awkscript/1.0",
      "outputs": [],
      "position": {
        "left": 1292.1666259765625,
        "top": 1083.1666870117188
      },
      "post_job_actions": {
        "ChangeDatatypeActionoutfile": {
          "action_arguments": {
            "newtype": "gff3"
          },
          "action_type": "ChangeDatatypeAction",
          "output_name": "outfile"
        },
        "HideDatasetActionoutfile": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "outfile"
        },
        "RenameDatasetActionoutfile": {
          "action_arguments": {
            "newname": "Collapsed Sigi Islands from #{infile}"
          },
          "action_type": "RenameDatasetAction",
          "output_name": "outfile"
        }
      },
      "tool_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/awkscript/awkscript/1.0",
      "tool_state": "{\"__page__\": null, \"code\": \"\\\"BEGIN { \\\\n    FS=OFS=\\\\\\\"\\\\\\\\t\\\\\\\";\\\\n    inIsland = 0; # Flag to track that the next record is part of the same island\\\\n    print \\\\\\\"##gff-version 3\\\\\\\";\\\\n    src=\\\\\\\"Colombo/SigiHMM\\\\\\\" # Force source to Colombo v4 output for future compatibility\\\\n}\\\\n\\\\ntool_input==1 && match($0, /^AC   ([^;]+);$/, a){\\\\n    id=a[1];\\\\n    nextfile;\\\\n}\\\\n\\\\ntool_input == 0 && /^#/ { print; next; }\\\\ntool_input == 0 && $4 == \\\\\\\"1\\\\\\\" || $5 == \\\\\\\"0\\\\\\\" { next } # Some results contain lines where start is 1 / end is 0. Skip to avoid erroneous GIs\\\\ntool_input == 0 && $3 == \\\\\\\"PUTAL\\\\\\\" && !inIsland { \\\\n    #sub(/;$/, \\\\\\\"\\\\\\\", $1); # Remove trailing garbage SigiHMM attaches to id\\\\n    #id=$1; \\\\n    #src=$2; \\\\n    start=$4; end=$5;\\\\n    inIsland=1;\\\\n    next;\\\\n}\\\\ntool_input == 0 && $3 == \\\\\\\"PUTAL\\\\\\\" && inIsland { end=$5; next }\\\\ntool_input == 0 && $3 != \\\\\\\"PUTAL\\\\\\\" && inIsland { print id, src, \\\\\\\"genomic_island\\\\\\\", start, end, \\\\\\\".\\\\\\\", \\\\\\\".\\\\\\\", \\\\\\\".\\\\\\\", \\\\\\\"\\\\\\\"; inIsland=0; }\\\\nEND { if (tool_input == 0 && inIsland) print id, src, \\\\\\\"genomic_island\\\\\\\", start, end, \\\\\\\".\\\\\\\", \\\\\\\".\\\\\\\", \\\\\\\".\\\\\\\", \\\\\\\"\\\\\\\"; }\\\"\", \"last\": \"\\\"true\\\"\", \"infiles\": \"[{\\\"__index__\\\": 0, \\\"infile\\\": {\\\"__class__\\\": \\\"RuntimeValue\\\"}}]\", \"envs\": \"[]\", \"__rerun_remap_job_id__\": null, \"infile\": \"{\\\"__class__\\\": \\\"RuntimeValue\\\"}\"}",
      "tool_version": "1.1.1",
      "type": "tool",
      "uuid": "e58e9ae3-af9e-4c89-a7ce-08135dd70325",
      "workflow_outputs": []
    },
    "13": {
      "annotation": "",
      "content_id": "__FILTER_FROM_FILE__",
      "errors": null,
      "id": 13,
      "input_connections": {
        "how|filter_source": {
          "id": 11,
          "output_name": "out_file1"
        },
        "input": {
          "id": 4,
          "output_name": "output"
        }
      },
      "inputs": [],
      "label": "Filter duplicates",
      "name": "Filter List",
      "outputs": [
        {
          "name": "output_filtered",
          "type": "input"
        },
        {
          "name": "output_discarded",
          "type": "input"
        }
      ],
      "position": {
        "left": 1223.1666259765625,
        "top": 711.1666870117188
      },
      "post_job_actions": {
        "HideDatasetActionoutput_discarded": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output_discarded"
        },
        "HideDatasetActionoutput_filtered": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output_filtered"
        },
        "RenameDatasetActionoutput_discarded": {
          "action_arguments": {
            "newname": "Discarded duplicate inputs"
          },
          "action_type": "RenameDatasetAction",
          "output_name": "output_discarded"
        }
      },
      "tool_id": "__FILTER_FROM_FILE__",
      "tool_state": "{\"__page__\": null, \"how\": \"{\\\"__current_case__\\\": 0, \\\"filter_source\\\": {\\\"__class__\\\": \\\"ConnectedValue\\\"}, \\\"how_filter\\\": \\\"remove_if_absent\\\"}\", \"__rerun_remap_job_id__\": null, \"input\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\"}",
      "tool_version": "1.0.0",
      "type": "tool",
      "uuid": "6e9257bc-0876-420c-abac-ef7936f89de1",
      "workflow_outputs": []
    },
    "14": {
      "annotation": "",
      "content_id": "__MERGE_COLLECTION__",
      "errors": null,
      "id": 14,
      "input_connections": {
        "inputs_0|input": {
          "id": 5,
          "output_name": "output"
        },
        "inputs_1|input": {
          "id": 12,
          "output_name": "outfile"
        }
      },
      "inputs": [],
      "label": "Aggregate island calls",
      "name": "Merge Collections",
      "outputs": [
        {
          "name": "output",
          "type": "input"
        }
      ],
      "position": {
        "left": 1592.5,
        "top": 968.5
      },
      "post_job_actions": {
        "HideDatasetActionoutput": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output"
        }
      },
      "tool_id": "__MERGE_COLLECTION__",
      "tool_state": "{\"inputs\": \"[{\\\"__index__\\\": 0, \\\"input\\\": {\\\"__class__\\\": \\\"ConnectedValue\\\"}}, {\\\"__index__\\\": 1, \\\"input\\\": {\\\"__class__\\\": \\\"ConnectedValue\\\"}}]\", \"__rerun_remap_job_id__\": null, \"advanced\": \"{\\\"conflict\\\": {\\\"__current_case__\\\": 0, \\\"duplicate_options\\\": \\\"suffix_conflict\\\", \\\"suffix_pattern\\\": \\\"_#\\\"}}\", \"__page__\": null}",
      "tool_version": "1.0.0",
      "type": "tool",
      "uuid": "030de47b-86ff-426d-afa2-ed396164c24a",
      "workflow_outputs": []
    },
    "15": {
      "annotation": "",
      "content_id": "__RELABEL_FROM_FILE__",
      "errors": null,
      "id": 15,
      "input_connections": {
        "how|labels": {
          "id": 7,
          "output_name": "outfile"
        },
        "input": {
          "id": 13,
          "output_name": "output_filtered"
        }
      },
      "inputs": [],
      "label": "Relabel List Identifiers",
      "name": "Relabel List Identifiers",
      "outputs": [
        {
          "name": "output",
          "type": "input"
        }
      ],
      "position": {
        "left": 1319.1666259765625,
        "top": 433.1666717529297
      },
      "post_job_actions": {
        "HideDatasetActionoutput": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output"
        },
        "RenameDatasetActionoutput": {
          "action_arguments": {
            "newname": "Relabelled fastas from #{input}"
          },
          "action_type": "RenameDatasetAction",
          "output_name": "output"
        }
      },
      "tool_id": "__RELABEL_FROM_FILE__",
      "tool_state": "{\"__page__\": null, \"how\": \"{\\\"__current_case__\\\": 1, \\\"how_select\\\": \\\"tabular\\\", \\\"labels\\\": {\\\"__class__\\\": \\\"ConnectedValue\\\"}, \\\"strict\\\": \\\"true\\\"}\", \"__rerun_remap_job_id__\": null, \"input\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\"}",
      "tool_version": "1.0.0",
      "type": "tool",
      "uuid": "f33bf48b-8845-41fe-a260-0aa1859296a6",
      "workflow_outputs": []
    },
    "16": {
      "annotation": "",
      "content_id": "Filter1",
      "errors": null,
      "id": 16,
      "input_connections": {
        "input": {
          "id": 14,
          "output_name": "output"
        }
      },
      "inputs": [],
      "label": "Filter Islands",
      "name": "Filter",
      "outputs": [
        {
          "name": "out_file1",
          "type": "input"
        }
      ],
      "position": {
        "left": 1924.5,
        "top": 1007.5
      },
      "post_job_actions": {
        "ChangeDatatypeActionout_file1": {
          "action_arguments": {
            "newtype": "gff3"
          },
          "action_type": "ChangeDatatypeAction",
          "output_name": "out_file1"
        },
        "HideDatasetActionout_file1": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "out_file1"
        }
      },
      "tool_id": "Filter1",
      "tool_state": "{\"input\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\", \"__rerun_remap_job_id__\": null, \"header_lines\": \"\\\"1\\\"\", \"cond\": \"\\\"c5-c4>${minimum_island_size}\\\"\", \"__page__\": null}",
      "tool_version": "1.1.0",
      "type": "tool",
      "uuid": "fb9876f9-6cea-443e-8111-82cccdd30d0d",
      "workflow_outputs": []
    },
    "17": {
      "annotation": "",
      "content_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/parsnp/parsnp/1.2",
      "errors": null,
      "id": 17,
      "input_connections": {
        "genomes": {
          "id": 15,
          "output_name": "output"
        }
      },
      "inputs": [
        {
          "description": "runtime parameter for tool ParSNP",
          "name": "adv"
        }
      ],
      "label": "Generate newick tree",
      "name": "ParSNP",
      "outputs": [
        {
          "name": "tree",
          "type": "newick"
        },
        {
          "name": "vcf",
          "type": "vcf"
        },
        {
          "name": "ggr",
          "type": "ggr"
        },
        {
          "name": "xfma",
          "type": "xfma"
        }
      ],
      "position": {
        "left": 1527.5,
        "top": 618.5
      },
      "post_job_actions": {
        "HideDatasetActionggr": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "ggr"
        },
        "HideDatasetActionvcf": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "vcf"
        },
        "HideDatasetActionxfma": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "xfma"
        },
        "RenameDatasetActiontree": {
          "action_arguments": {
            "newname": "Newick tree"
          },
          "action_type": "RenameDatasetAction",
          "output_name": "tree"
        }
      },
      "tool_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/parsnp/parsnp/1.2",
      "tool_state": "{\"adv\": \"{\\\"MUMi_or_curated\\\": {\\\"__current_case__\\\": 1, \\\"curated\\\": \\\"true\\\"}, \\\"aligner\\\": \\\"muscle\\\", \\\"d_value\\\": \\\"100\\\", \\\"extend_lcb\\\": \\\"false\\\", \\\"filter_snp\\\": \\\"false\\\", \\\"lcb_size\\\": \\\"25\\\", \\\"max_diag_diff\\\": {\\\"__current_case__\\\": 0, \\\"diag_diff\\\": \\\"0.12\\\", \\\"diag_diff_unit\\\": \\\"\\\"}, \\\"min_anchor_len\\\": {\\\"__current_case__\\\": 1, \\\"anchor_default\\\": \\\"true\\\"}, \\\"output_unaligned\\\": \\\"false\\\", \\\"query_genome\\\": {\\\"__class__\\\": \\\"RuntimeValue\\\"}, \\\"use_ids\\\": \\\"true\\\"}\", \"ref_or_gbk\": \"{\\\"__current_case__\\\": 0, \\\"ref_genome\\\": {\\\"__current_case__\\\": 1, \\\"random_ref\\\": \\\"true\\\"}, \\\"ref_type\\\": \\\"fasta\\\"}\", \"__rerun_remap_job_id__\": null, \"genomes\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\", \"__page__\": null}",
      "tool_version": "1.2",
      "type": "tool",
      "uuid": "68fc6ab6-46d7-4825-baaa-6a3dc729ecdb",
      "workflow_outputs": [
        {
          "label": null,
          "output_name": "tree",
          "uuid": "e78e4e5c-2d0e-49eb-b8c4-521cca2c1064"
        }
      ]
    },
    "18": {
      "annotation": "",
      "content_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/feature_merge/feature-merge/1.2",
      "errors": null,
      "id": 18,
      "input_connections": {
        "inputs": {
          "id": 16,
          "output_name": "out_file1"
        }
      },
      "inputs": [],
      "label": "Merge islands",
      "name": "GFF/GTF Feature Merge",
      "outputs": [
        {
          "name": "output",
          "type": "gff"
        }
      ],
      "position": {
        "left": 2192,
        "top": 1005.5
      },
      "post_job_actions": {
        "HideDatasetActionoutput": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output"
        }
      },
      "tool_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/feature_merge/feature-merge/1.2",
      "tool_state": "{\"ignore_strand\": \"\\\"true\\\"\", \"inputs\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\", \"features\": \"[]\", \"__page__\": null, \"exact_only\": \"\\\"false\\\"\", \"__rerun_remap_job_id__\": null, \"merge_strategy\": \"\\\"append\\\"\", \"exclude_components\": \"\\\"true\\\"\"}",
      "tool_version": "1.0",
      "type": "tool",
      "uuid": "e6ffad42-43ae-404d-b1ab-c65bce1eb618",
      "workflow_outputs": []
    },
    "19": {
      "annotation": "",
      "content_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/extract_tree_order/extract-tree-order/1.0",
      "errors": null,
      "id": 19,
      "input_connections": {
        "input": {
          "id": 17,
          "output_name": "tree"
        }
      },
      "inputs": [],
      "label": "Extract alignment order",
      "name": "BioPython Phylo Parse Newick Leaf Order",
      "outputs": [
        {
          "name": "output",
          "type": "txt"
        }
      ],
      "position": {
        "left": 1838.6666259765625,
        "top": 761.1666870117188
      },
      "post_job_actions": {
        "HideDatasetActionoutput": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output"
        },
        "RenameDatasetActionoutput": {
          "action_arguments": {
            "newname": "Extracted alignment order from #{input}"
          },
          "action_type": "RenameDatasetAction",
          "output_name": "output"
        }
      },
      "tool_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/extract_tree_order/extract-tree-order/1.0",
      "tool_state": "{\"input\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\", \"__rerun_remap_job_id__\": null, \"__page__\": null}",
      "tool_version": "1.0",
      "type": "tool",
      "uuid": "8a4732ba-6746-43e1-8894-72db27385b71",
      "workflow_outputs": []
    },
    "20": {
      "annotation": "",
      "content_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.27.1",
      "errors": null,
      "id": 20,
      "input_connections": {
        "fasta_source|fasta": {
          "id": 4,
          "output_name": "output"
        },
        "input": {
          "id": 18,
          "output_name": "output"
        }
      },
      "inputs": [],
      "label": "Extract island sequences",
      "name": "bedtools GetFastaBed",
      "outputs": [
        {
          "name": "output",
          "type": "fasta"
        }
      ],
      "position": {
        "left": 2535,
        "top": 340.5
      },
      "post_job_actions": {
        "HideDatasetActionoutput": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output"
        }
      },
      "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.27.1",
      "tool_shed_repository": {
        "changeset_revision": "87ee588b3d45",
        "name": "bedtools",
        "owner": "iuc",
        "tool_shed": "toolshed.g2.bx.psu.edu"
      },
      "tool_state": "{\"__page__\": null, \"name\": \"\\\"false\\\"\", \"__rerun_remap_job_id__\": null, \"split\": \"\\\"false\\\"\", \"tab\": \"\\\"false\\\"\", \"input\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\", \"strand\": \"\\\"false\\\"\", \"fasta_source\": \"{\\\"__current_case__\\\": 0, \\\"fasta\\\": {\\\"__class__\\\": \\\"ConnectedValue\\\"}, \\\"fasta_source_selector\\\": \\\"history\\\"}\"}",
      "tool_version": "2.27.1",
      "type": "tool",
      "uuid": "7e5c2cd7-c4fb-45e7-99dd-7a67f8bbf273",
      "workflow_outputs": []
    },
    "21": {
      "annotation": "",
      "content_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_sed_tool/1.1.1",
      "errors": null,
      "id": 21,
      "input_connections": {
        "infile": {
          "id": 19,
          "output_name": "output"
        }
      },
      "inputs": [],
      "label": "Scrub .ref",
      "name": "Text transformation",
      "outputs": [
        {
          "name": "output",
          "type": "input"
        }
      ],
      "position": {
        "left": 2126.6666259765625,
        "top": 696.1666870117188
      },
      "post_job_actions": {
        "HideDatasetActionoutput": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output"
        },
        "RenameDatasetActionoutput": {
          "action_arguments": {
            "newname": "Scrubbed .ref from #{infile}"
          },
          "action_type": "RenameDatasetAction",
          "output_name": "output"
        }
      },
      "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_sed_tool/1.1.1",
      "tool_shed_repository": {
        "changeset_revision": "a6f147a050a2",
        "name": "text_processing",
        "owner": "bgruening",
        "tool_shed": "toolshed.g2.bx.psu.edu"
      },
      "tool_state": "{\"adv_opts\": \"{\\\"__current_case__\\\": 0, \\\"adv_opts_selector\\\": \\\"basic\\\"}\", \"__page__\": null, \"__rerun_remap_job_id__\": null, \"code\": \"\\\"s/\\\\\\\\.ref$//\\\"\", \"infile\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\"}",
      "tool_version": "1.1.1",
      "type": "tool",
      "uuid": "5ffc2cd4-ae8c-4ba1-a7a9-6fa652f19c00",
      "workflow_outputs": []
    },
    "22": {
      "annotation": "",
      "content_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/mash/mash/2.1",
      "errors": null,
      "id": 22,
      "input_connections": {
        "commands|inputs": {
          "id": 20,
          "output_name": "output"
        }
      },
      "inputs": [],
      "label": "MASH Sketch",
      "name": "MASH",
      "outputs": [
        {
          "name": "output",
          "type": "txt"
        }
      ],
      "position": {
        "left": 2827.5,
        "top": 352.5
      },
      "post_job_actions": {
        "HideDatasetActionoutput": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output"
        }
      },
      "tool_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/mash/mash/2.1",
      "tool_state": "{\"__page__\": null, \"commands\": \"{\\\"__current_case__\\\": 5, \\\"alphabet\\\": \\\"\\\", \\\"command\\\": \\\"sketch\\\", \\\"hash_seed\\\": \\\"42\\\", \\\"input_option\\\": {\\\"__current_case__\\\": 1, \\\"individual_seq\\\": \\\"true\\\"}, \\\"inputs\\\": {\\\"__class__\\\": \\\"ConnectedValue\\\"}, \\\"kmer_size\\\": \\\"21\\\", \\\"kmer_size_thresh\\\": \\\"0.01\\\", \\\"preserve_case\\\": \\\"false\\\", \\\"preserve_strand\\\": \\\"false\\\", \\\"sketch_size\\\": \\\"1000\\\", \\\"use_aaa\\\": \\\"false\\\"}\", \"__rerun_remap_job_id__\": null}",
      "tool_version": "2.1",
      "type": "tool",
      "uuid": "d22c936f-f5b0-44e2-86b9-7ab907ea0765",
      "workflow_outputs": []
    },
    "23": {
      "annotation": "",
      "content_id": "__SORTLIST__",
      "errors": null,
      "id": 23,
      "input_connections": {
        "input": {
          "id": 15,
          "output_name": "output"
        },
        "sort_type|sort_file": {
          "id": 21,
          "output_name": "output"
        }
      },
      "inputs": [],
      "label": "Sort datasets to order of alignment",
      "name": "Sort Collection",
      "outputs": [
        {
          "name": "output",
          "type": "input"
        }
      ],
      "position": {
        "left": 2348.166748046875,
        "top": 527.1666717529297
      },
      "post_job_actions": {
        "HideDatasetActionoutput": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output"
        },
        "RenameDatasetActionoutput": {
          "action_arguments": {
            "newname": "Fastas sorted for alignment from #{input}"
          },
          "action_type": "RenameDatasetAction",
          "output_name": "output"
        }
      },
      "tool_id": "__SORTLIST__",
      "tool_state": "{\"input\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\", \"sort_type\": \"{\\\"__current_case__\\\": 2, \\\"sort_file\\\": {\\\"__class__\\\": \\\"ConnectedValue\\\"}, \\\"sort_type\\\": \\\"file\\\"}\", \"__rerun_remap_job_id__\": null, \"__page__\": null}",
      "tool_version": "1.0.0",
      "type": "tool",
      "uuid": "8a2c75fc-7284-4271-9177-50fde9ef7eb4",
      "workflow_outputs": []
    },
    "24": {
      "annotation": "",
      "content_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/mash/mash/2.1",
      "errors": null,
      "id": 24,
      "input_connections": {
        "commands|inputs": {
          "id": 22,
          "output_name": "output"
        },
        "commands|reference": {
          "id": 22,
          "output_name": "output"
        }
      },
      "inputs": [],
      "label": "MASH Generate island graph",
      "name": "MASH",
      "outputs": [
        {
          "name": "output",
          "type": "txt"
        }
      ],
      "position": {
        "left": 3107.5,
        "top": 364.5
      },
      "post_job_actions": {
        "HideDatasetActionoutput": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output"
        }
      },
      "tool_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/mash/mash/2.1",
      "tool_state": "{\"__page__\": null, \"commands\": \"{\\\"__current_case__\\\": 1, \\\"alphabet\\\": \\\"\\\", \\\"command\\\": \\\"dist\\\", \\\"hash_seed\\\": \\\"42\\\", \\\"input_option\\\": {\\\"__current_case__\\\": 1, \\\"individual_seq\\\": \\\"true\\\"}, \\\"inputs\\\": {\\\"__class__\\\": \\\"ConnectedValue\\\"}, \\\"kmer_size\\\": \\\"21\\\", \\\"kmer_size_thresh\\\": \\\"0.01\\\", \\\"max_dist\\\": \\\"0.99\\\", \\\"max_p\\\": \\\"1.0\\\", \\\"preserve_case\\\": \\\"false\\\", \\\"preserve_strand\\\": \\\"false\\\", \\\"reference\\\": {\\\"__class__\\\": \\\"ConnectedValue\\\"}, \\\"sketch_size\\\": \\\"1000\\\", \\\"table_output\\\": \\\"false\\\", \\\"use_aaa\\\": \\\"false\\\"}\", \"__rerun_remap_job_id__\": null}",
      "tool_version": "2.1",
      "type": "tool",
      "uuid": "f0cd1c90-1d7d-4868-a3a4-811f45c274cf",
      "workflow_outputs": []
    },
    "25": {
      "annotation": "",
      "content_id": "__APPLY_RULES__",
      "errors": null,
      "id": 25,
      "input_connections": {
        "input": {
          "id": 23,
          "output_name": "output"
        }
      },
      "inputs": [],
      "label": "Create pairwise invocations",
      "name": "Apply Rule to Collection",
      "outputs": [
        {
          "name": "output",
          "type": "input"
        }
      ],
      "position": {
        "left": 2584.5,
        "top": 849.5
      },
      "post_job_actions": {
        "HideDatasetActionoutput": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output"
        }
      },
      "tool_id": "__APPLY_RULES__",
      "tool_state": "{\"rules\": \"{\\\"mapping\\\": [{\\\"collapsible_value\\\": {\\\"__class__\\\": \\\"RuntimeValue\\\"}, \\\"columns\\\": [1, 0], \\\"connectable\\\": true, \\\"editing\\\": false, \\\"is_workflow\\\": false, \\\"type\\\": \\\"list_identifiers\\\"}], \\\"rules\\\": [{\\\"collapsible_value\\\": {\\\"__class__\\\": \\\"RuntimeValue\\\"}, \\\"connectable\\\": true, \\\"error\\\": null, \\\"is_workflow\\\": false, \\\"type\\\": \\\"add_column_metadata\\\", \\\"value\\\": \\\"identifier0\\\", \\\"warn\\\": null}, {\\\"collapsible_value\\\": {\\\"__class__\\\": \\\"RuntimeValue\\\"}, \\\"connectable\\\": true, \\\"error\\\": null, \\\"is_workflow\\\": false, \\\"start\\\": 0, \\\"type\\\": \\\"add_column_rownum\\\", \\\"warn\\\": null}, {\\\"collapsible_value\\\": {\\\"__class__\\\": \\\"RuntimeValue\\\"}, \\\"connectable\\\": true, \\\"error\\\": null, \\\"is_workflow\\\": false, \\\"start\\\": 1, \\\"type\\\": \\\"add_column_rownum\\\", \\\"warn\\\": null}, {\\\"collapsible_value\\\": {\\\"__class__\\\": \\\"RuntimeValue\\\"}, \\\"connectable\\\": true, \\\"error\\\": null, \\\"is_workflow\\\": false, \\\"target_columns_0\\\": [1], \\\"target_columns_1\\\": [2], \\\"type\\\": \\\"split_columns\\\", \\\"warn\\\": null}, {\\\"collapsible_value\\\": {\\\"__class__\\\": \\\"RuntimeValue\\\"}, \\\"connectable\\\": true, \\\"count\\\": 1, \\\"error\\\": null, \\\"invert\\\": false, \\\"is_workflow\\\": false, \\\"type\\\": \\\"add_filter_count\\\", \\\"warn\\\": null, \\\"which\\\": \\\"first\\\"}, {\\\"collapsible_value\\\": {\\\"__class__\\\": \\\"RuntimeValue\\\"}, \\\"connectable\\\": true, \\\"count\\\": 1, \\\"error\\\": null, \\\"invert\\\": false, \\\"is_workflow\\\": false, \\\"type\\\": \\\"add_filter_count\\\", \\\"warn\\\": null, \\\"which\\\": \\\"last\\\"}]}\", \"input\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\", \"__rerun_remap_job_id__\": null, \"__page__\": null}",
      "tool_version": "1.0.0",
      "type": "tool",
      "uuid": "9968d7a3-45b1-4a29-92d4-bc84a2d3a92f",
      "workflow_outputs": []
    },
    "26": {
      "annotation": "",
      "content_id": "Cut1",
      "errors": null,
      "id": 26,
      "input_connections": {
        "input": {
          "id": 24,
          "output_name": "output"
        }
      },
      "inputs": [],
      "label": "Remove columns",
      "name": "Cut",
      "outputs": [
        {
          "name": "out_file1",
          "type": "tabular"
        }
      ],
      "position": {
        "left": 3383.166748046875,
        "top": 389.1666717529297
      },
      "post_job_actions": {
        "HideDatasetActionout_file1": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "out_file1"
        }
      },
      "tool_id": "Cut1",
      "tool_state": "{\"columnList\": \"\\\"c1,c2,c3\\\"\", \"input\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\", \"delimiter\": \"\\\"T\\\"\", \"__rerun_remap_job_id__\": null, \"__page__\": null}",
      "tool_version": "1.0.2",
      "type": "tool",
      "uuid": "fc149486-dadc-491a-a70b-08e4e5baf036",
      "workflow_outputs": []
    },
    "27": {
      "annotation": "",
      "content_id": "toolshed.g2.bx.psu.edu/repos/iuc/progressivemauve/progressivemauve/2015_02_13.0",
      "errors": null,
      "id": 27,
      "input_connections": {
        "sequences": {
          "id": 25,
          "output_name": "output"
        }
      },
      "inputs": [
        {
          "description": "runtime parameter for tool progressiveMauve",
          "name": "apply_backbone"
        },
        {
          "description": "runtime parameter for tool progressiveMauve",
          "name": "input_guide_tree"
        },
        {
          "description": "runtime parameter for tool progressiveMauve",
          "name": "match_input"
        }
      ],
      "label": "Pairwise align",
      "name": "progressiveMauve",
      "outputs": [
        {
          "name": "output",
          "type": "xmfa"
        },
        {
          "name": "output_backbone_file",
          "type": "tabular"
        }
      ],
      "position": {
        "left": 3204,
        "top": 1077.5
      },
      "post_job_actions": {
        "ChangeDatatypeActionoutput": {
          "action_arguments": {
            "newtype": "txt"
          },
          "action_type": "ChangeDatatypeAction",
          "output_name": "output"
        },
        "HideDatasetActionoutput": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output"
        },
        "HideDatasetActionoutput_backbone_file": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output_backbone_file"
        }
      },
      "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/progressivemauve/progressivemauve/2015_02_13.0",
      "tool_shed_repository": {
        "changeset_revision": "bdb752f3c6bb",
        "name": "progressivemauve",
        "owner": "iuc",
        "tool_shed": "toolshed.g2.bx.psu.edu"
      },
      "tool_state": "{\"skip_gapped_alignment\": \"\\\"false\\\"\", \"weight\": \"\\\"0\\\"\", \"conservation_distance_scale\": \"\\\"0.5\\\"\", \"no_weight_scaling\": \"\\\"false\\\"\", \"hmm_p_go_homologous\": \"\\\"1e-05\\\"\", \"sequences\": \"{\\\"__class__\\\": \\\"ConnectedValue\\\"}\", \"max_breakpoint_distance_scale\": \"\\\"0.5\\\"\", \"coding_seeds\": \"\\\"false\\\"\", \"mums\": \"\\\"false\\\"\", \"__rerun_remap_job_id__\": null, \"min_scaled_penalty\": \"\\\"0\\\"\", \"scoring_scheme\": \"\\\"sp\\\"\", \"output_backbone\": \"\\\"true\\\"\", \"no_recursion\": \"\\\"false\\\"\", \"gap_extend\": \"\\\"0\\\"\", \"disable_backbone\": \"\\\"false\\\"\", \"seed_family\": \"\\\"false\\\"\", \"apply_backbone\": \"{\\\"__class__\\\": \\\"RuntimeValue\\\"}\", \"__page__\": null, \"repeat_penalty\": \"\\\"negative\\\"\", \"hmm_p_go_unrelated\": \"\\\"1e-09\\\"\", \"input_guide_tree\": \"{\\\"__class__\\\": \\\"RuntimeValue\\\"}\", \"seed_weight\": \"\\\"0\\\"\", \"max_gapped_aligner_length\": \"\\\"0\\\"\", \"bp_dist_estimate_min_score\": \"\\\"0\\\"\", \"island_gap_size\": \"\\\"20\\\"\", \"skip_refinement\": \"\\\"false\\\"\", \"collinear\": \"\\\"false\\\"\", \"match_input\": \"{\\\"__class__\\\": \\\"RuntimeValue\\\"}\", \"output_guide_tree\": \"\\\"false\\\"\", \"solid_seeds\": \"\\\"false\\\"\", \"gap_open\": \"\\\"0\\\"\", \"hmm_identity\": \"\\\"0.7\\\"\"}",
      "tool_version": "2015_02_13.0",
      "type": "tool",
      "uuid": "0b6f76dd-2e6f-4545-969d-eaf3e36a79b1",
      "workflow_outputs": []
    },
    "28": {
      "annotation": "",
      "content_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/mcl/mcl/14.137",
      "errors": null,
      "id": 28,
      "input_connections": {
        "input_type_select|input": {
          "id": 26,
          "output_name": "out_file1"
        }
      },
      "inputs": [],
      "label": "MCL cluster islands",
      "name": "MCL",
      "outputs": [
        {
          "name": "output",
          "type": "txt"
        }
      ],
      "position": {
        "left": 3619.5,
        "top": 368.5
      },
      "post_job_actions": {
        "HideDatasetActionoutput": {
          "action_arguments": {},
          "action_type": "HideDatasetAction",
          "output_name": "output"
        }
      },
      "tool_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/mcl/mcl/14.137",
      "tool_state": "{\"__page__\": null, \"reweight\": \"\\\"1.0\\\"\", \"verbosity\": \"null\", \"discard_loops\": \"\\\"true\\\"\", \"transform\": \"\\\"mul(-1),add(1),gq(0.96)\\\"\", \"input_type_select\": \"{\\\"__current_case__\\\": 1, \\\"input\\\": {\\\"__class__\\\": \\\"ConnectedValue\\\"}, \\\"input_type\\\": \\\"--abc\\\"}\", \"inflation\": \"\\\"4.0\\\"\", \"sum_loops\": \"\\\"false\\\"\", \"__rerun_remap_job_id__\": null}",
      "tool_version": "14.137",
      "type": "tool",
      "uuid": "26e063f9-609c-4f07-929a-e28953fae2c0",
      "workflow_outputs": []
    },
    "29": {
      "annotation": "",
      "content_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/awkscript/awkscript/1.0",
      "errors": "Tool is not installed",
      "id": 29,
      "input_connections": {
        "infiles_0|infile": {
          "id": 4,
          "output_name": "output"
        },
        "infiles_1|infile": {
          "id": 2,
          "output_name": "output"
        },
        "infiles_2|infile": {
          "id": 28,
          "output_name": "output"
        },
        "infiles_3|infile": {
          "id": 17,
          "output_name": "tree"
        },
        "infiles_4|infile": {
          "id": 18,
          "output_name": "output"
        },
        "infiles_5|infile": {
          "id": 8,
          "output_name": "summary"
        },
        "infiles_6|infile": {
          "id": 27,
          "output_name": "output"
        },
        "infiles_7|infile": {
          "id": 27,
          "output_name": "output_backbone_file"
        },
        "infiles_8|infile": {
          "id": 2,
          "output_name": "output"
        }
      },
      "inputs": [],
      "label": "Generate final GFF",
      "name": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/awkscript/awkscript/1.0",
      "outputs": [],
      "position": {
        "left": 4243.5,
        "top": 275
      },
      "post_job_actions": {
        "ChangeDatatypeActionoutfile": {
          "action_arguments": {
            "newtype": "gff3"
          },
          "action_type": "ChangeDatatypeAction",
          "output_name": "outfile"
        },
        "RenameDatasetActionoutfile": {
          "action_arguments": {
            "newname": "IslandCompare Result"
          },
          "action_type": "RenameDatasetAction",
          "output_name": "outfile"
        },
        "TagDatasetActionoutfile": {
          "action_arguments": {
            "tags": "islandcompare"
          },
          "action_type": "TagDatasetAction",
          "output_name": "outfile"
        }
      },
      "tool_id": "toolshed.g2.bx.psu.edu/repos/brinkmanlab/awkscript/awkscript/1.0",
      "tool_state": "{\"__page__\": null, \"code\": \"\\\"# Collects outputs from IslandCompare workflow and combines into GFF\\\\n# Why not Python? AWK is far more concise and the language is far more stable for this application.\\\\n\\\\nfunction gff_encode(v) {\\\\n    gsub(/\\\\\\\\n {21}/, \\\\\\\" \\\\\\\", v);\\\\n    gsub(/\\\\\\\\t/, \\\\\\\"%09\\\\\\\", v);\\\\n    gsub(/,/, \\\\\\\"%2C\\\\\\\", v);\\\\n    gsub(/=/, \\\\\\\"%3D\\\\\\\", v);\\\\n    gsub(/;/, \\\\\\\"%3B\\\\\\\", v);\\\\n    return v;\\\\n}\\\\n\\\\nfunction unescape_posix(a) {\\\\n    gsub(\\\\\\\"{amp}\\\\\\\", \\\\\\\"&\\\\\\\", a);\\\\n    gsub(\\\\\\\"{slash}\\\\\\\", \\\\\\\"/\\\\\\\", a);\\\\n    gsub(\\\\\\\"{baskslash}\\\\\\\", \\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\", a);\\\\n    gsub(\\\\\\\"{question}\\\\\\\", \\\\\\\"\\\\\\\\\\\\\\\\?\\\\\\\", a);\\\\n    gsub(\\\\\\\"{percent}\\\\\\\", \\\\\\\"%\\\\\\\", a);\\\\n    gsub(\\\\\\\"{star}\\\\\\\", \\\\\\\"\\\\\\\\\\\\\\\\*\\\\\\\", a);\\\\n    gsub(\\\\\\\"{colon}\\\\\\\", \\\\\\\":\\\\\\\", a);\\\\n    gsub(\\\\\\\"{pipe}\\\\\\\", \\\\\\\"\\\\\\\\\\\\\\\\|\\\\\\\", a);\\\\n    gsub(\\\\\\\"{dblquot}\\\\\\\", \\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\", a);\\\\n    gsub(\\\\\\\"{lt}\\\\\\\", \\\\\\\"<\\\\\\\", a);\\\\n    gsub(\\\\\\\"{gt}\\\\\\\", \\\\\\\">\\\\\\\", a);\\\\n    gsub(\\\\\\\"{dot}\\\\\\\", \\\\\\\"\\\\\\\\\\\\\\\\.\\\\\\\", a);\\\\n    gsub(\\\\\\\"{space}\\\\\\\", \\\\\\\" \\\\\\\", a);\\\\n    gsub(\\\\\\\"\\\\\\\\t\\\\\\\", \\\\\\\"{tab}\\\\\\\", a);\\\\n    gsub(\\\\\\\"{quot}\\\\\\\", \\\\\\\"'\\\\\\\", a);\\\\n    gsub(\\\\\\\"{esc}\\\\\\\", \\\\\\\"{\\\\\\\", a); #Must be last\\\\n    return a;\\\\n}\\\\n\\\\n# See ./color.gawk for a writeup on this function\\\\nfunction generate_distinct_color(n){\\\\n    n -= 1; # Clusters are 1-indexed, shift to 0-index\\\\n    if (n > 0) {\\\\n        #calculate log2 n TODO implement using integer log2 as it is more efficient\\\\n        log2n=log(n)/log(2);\\\\n        floor=int(log2n);\\\\n        ceil=(log2n>floor?floor+1:floor);\\\\n        h=((n - 2^floor) * 2 + 1) / (2^ceil);\\\\n        h *= 0.9; # Shift color range to exclude circular h values\\\\n    } else {\\\\n        h=0;\\\\n    }\\\\n    s = 1;\\\\n    v = 1;\\\\n    # The following maps into a hsv color gradient\\\\n    # Taken from https://gist.github.com/mjackson/5311256\\\\n    i = int(h * 6);\\\\n    f = h * 6 - i;\\\\n    p = v * (1 - s);\\\\n    q = v * (1 - f * s);\\\\n    t = v * (1 - (1 - f) * s);\\\\n    switch (i % 6) {\\\\n        case 0: r = v; g = t; b = p; break;\\\\n        case 1: r = q; g = v; b = p; break;\\\\n        case 2: r = p; g = v; b = t; break;\\\\n        case 3: r = p; g = q; b = v; break;\\\\n        case 4: r = t; g = p; b = v; break;\\\\n        case 5: r = v; g = p; b = q; break;\\\\n    }\\\\n    return sprintf(\\\\\\\"#%02X%02X%02X\\\\\\\", r * 255, g * 255, b * 255)\\\\n}\\\\n\\\\nfunction abs(v) { return v < 0 ? -v : v }\\\\nfunction int_to_strand(v) { return v < 0 ? \\\\\\\"-\\\\\\\" : \\\\\\\"+\\\\\\\" }\\\\n\\\\n# Expected inputs\\\\n# 1: Fasta's used for mauve alignment\\\\n# 2: Genbank files to read sequence lengths\\\\n# 3: MCL Clustering matrix\\\\n# 4: Newick tree\\\\n# 5: Genomic island GFF file\\\\n# 6: RGI annotation summary\\\\n# 7: mauve xfma\\\\n# 8: mauve alignment tables\\\\n# 9: Genbank files again, to output gene annotations\\\\n\\\\nBEGIN {\\\\n    last_tool_input = tool_input;\\\\n    tool_input_index = 0;\\\\n    min_cluster_size = ENVIRON[\\\\\\\"min_cluster_size\\\\\\\"] ? ENVIRON[\\\\\\\"min_cluster_size\\\\\\\"] : 2;\\\\n    print \\\\\\\"##gff-version 3\\\\\\\";\\\\n}\\\\n\\\\nBEGINFILE { \\\\n    if (tool_input==2 || tool_input==9) { FS=\\\\\\\"\\\\\\\\n {21}/\\\\\\\"; RS=\\\\\\\"\\\\\\\\n {5}\\\\\\\\\\\\\\\\<\\\\\\\"; } else { FS=OFS=\\\\\\\"\\\\\\\\t\\\\\\\"; RS=\\\\\\\"\\\\\\\\n\\\\\\\" };\\\\n    if (last_tool_input != tool_input) { tool_input_index = 0; } # Catch input change and reset index\\\\n    else ++tool_input_index;\\\\n    last_tool_input = tool_input;\\\\n}\\\\n\\\\n#Read dataset -> sequence id\\\\ntool_input==1 && match($0, /^>([^ ]+)/, a) { file=FILENAME; sub(/.*\\\\\\\\//, \\\\\\\"\\\\\\\", file); datasets[file] = a[1]; nextfile }\\\\n\\\\n#Output sequence lengths\\\\ntool_input==2 && FNR==1 && match($0, /\\\\\\\\nACCESSION +([^\\\\\\\\n]+)/, a) { sequence = a[1]; next }\\\\ntool_input==2 && match($1, /source +([0-9]+)[^0-9]+([0-9]+)/, a) { print \\\\\\\"##sequence-region \\\\\\\" sequence \\\\\\\" \\\\\\\" a[1] \\\\\\\" \\\\\\\" a[2]; nextfile }\\\\n\\\\n#Read clusters\\\\ntool_input==3 && (NF >= min_cluster_size) { for (i=1; i<=NF; i++) { clusters[$i] = FNR;} next}\\\\n\\\\n#Output newick\\\\ntool_input==4 { print \\\\\\\"##newick: \\\\\\\"unescape_posix(gensub(/'([^']+)\\\\\\\\.ref'/, \\\\\\\"'\\\\\\\\\\\\\\\\1'\\\\\\\", \\\\\\\"g\\\\\\\", $0)); nextfile }\\\\n\\\\n#Output islands with cluster and color\\\\ntool_input==5 && /^[^#]/ {\\\\n    i=$1 \\\\\\\":\\\\\\\" ($4-1) \\\\\\\"-\\\\\\\" $5;\\\\n    if (i in clusters) {\\\\n        if (length($9)>0 && substr($9, length($9)-1) != \\\\\\\";\\\\\\\") $9 = $9 \\\\\\\";\\\\\\\";\\\\n        cluster = clusters[i];\\\\n        $9 = $9 \\\\\\\"cluster=\\\\\\\" cluster \\\\\\\";color=\\\\\\\" generate_distinct_color(cluster);\\\\n    }\\\\n    print;\\\\n    next\\\\n}\\\\n\\\\n#Output RGI\\\\ntool_input==6 && FNR==1 { split( $0, tags ); next }\\\\ntool_input==6 { match($1, /ID=[^_]*([^;]+)/, a); print gensub(a[1]\\\\\\\" *$\\\\\\\", \\\\\\\"\\\\\\\", 1, $2),\\\\\\\"RGI-CARD\\\\\\\",\\\\\\\"gene\\\\\\\",$3,$4,$8,$5,\\\\\\\".\\\\\\\",\\\\\\\"Name=\\\\\\\"$9\\\\\\\";Alias=ARO:\\\\\\\"$11\\\\\\\";\\\\\\\"tags[6]\\\\\\\"=\\\\\\\"$6\\\\\\\";\\\\\\\"tags[7]\\\\\\\"=\\\\\\\"$7\\\\\\\";\\\\\\\"tags[9]\\\\\\\"=\\\\\\\"$9\\\\\\\";\\\\\\\"tags[10]\\\\\\\"=\\\\\\\"$10\\\\\\\";\\\\\\\"tags[12]\\\\\\\"=\\\\\\\"$12\\\\\\\";\\\\\\\"tags[13]\\\\\\\"=\\\\\\\"$13\\\\\\\";\\\\\\\"tags[14]\\\\\\\"=\\\\\\\"$14\\\\\\\";\\\\\\\"tags[16]\\\\\\\"=\\\\\\\"$16\\\\\\\";\\\\\\\"tags[17]\\\\\\\"=\\\\\\\"$17\\\\\\\";\\\\\\\"tags[15]\\\\\\\"=\\\\\\\"$15\\\\\\\";\\\\\\\"; next}\\\\n\\\\n#Read sequence order from XFMA\\\\ntool_input==7 && match($1, /^#Sequence([0-9]+)File/, a) { ordinals[tool_input_index, a[1]-1] = datasets[$2]; next}\\\\ntool_input==7 && /^#BackboneFile/ { nextfile }\\\\n\\\\n#Output alignment\\\\ntool_input==8 && FNR>1 {\\\\n    seq=0;\\\\n    for (i=1; i < NF; i+=2) {\\\\n        if ($i != \\\\\\\"0\\\\\\\" && (abs($(i+1) - $i) > ENVIRON[\\\\\\\"minimum_homologous_region\\\\\\\"])) {\\\\n            base_seq=seq;\\\\n            for (j=i+2; j < NF; j+=2) {\\\\n                ++seq;\\\\n                if ($j != \\\\\\\"0\\\\\\\" && (abs($(j+1) - $j) > ENVIRON[\\\\\\\"minimum_homologous_region\\\\\\\"])) {\\\\n                    print ordinals[tool_input_index, base_seq], \\\\\\\"progressiveMauve\\\\\\\", \\\\\\\"match\\\\\\\", abs($i), abs($(i+1)), \\\\\\\".\\\\\\\", int_to_strand($i), \\\\\\\".\\\\\\\", \\\\\\\"Target=\\\\\\\" ordinals[tool_input_index, seq] \\\\\\\" \\\\\\\" abs($j) \\\\\\\" \\\\\\\" abs($(j+1)) \\\\\\\" \\\\\\\" int_to_strand($j);\\\\n                }\\\\n            }\\\\n            break;\\\\n        }\\\\n        ++seq;\\\\n    }\\\\n    next\\\\n}\\\\n\\\\n#Append gene annotations from GBK input files\\\\ntool_input==9 { record_type=\\\\\\\"gene\\\\\\\"; locus_tag=\\\\\\\"\\\\\\\"; gene=\\\\\\\"\\\\\\\"; product=\\\\\\\"\\\\\\\"; codon_start=\\\\\\\".\\\\\\\"; }\\\\ntool_input==9 && FNR==1 && match($0, /\\\\\\\\nACCESSION +([^\\\\\\\\n]+)/, a) { sequence = a[1]; next }\\\\ntool_input==9 && match($0, /\\\\\\\\/gene=\\\\\\\"([^\\\\\\\"]+)/, a) { gene=gff_encode(a[1]); }\\\\ntool_input==9 && match($0, /\\\\\\\\/pseudo/) { record_type=\\\\\\\"pseudogene\\\\\\\"; }\\\\ntool_input==9 && match($0, /\\\\\\\\/locus_tag=\\\\\\\"([^\\\\\\\"]+)/, a) { locus_tag=gff_encode(a[1]); }\\\\ntool_input==9 && match($0, /\\\\\\\\/product=\\\\\\\"([^\\\\\\\"]+)/, a) { product=gff_encode(a[1]); }\\\\ntool_input==9 && match($0, /\\\\\\\\/codon_start=([0-9])/, a) { codon_start=a[1]-1; }\\\\ntool_input==9 && match($1, /(\\\\\\\\w+) +(complement\\\\\\\\()?([0-9]+)[^0-9]+([0-9]+)/, a) {\\\\n    type=a[1]; start=a[3]; stop=a[4]; strand=(a[2]==\\\\\\\"\\\\\\\"?\\\\\\\"+\\\\\\\":\\\\\\\"-\\\\\\\");\\\\n    print sequence, \\\\\\\"Genbank\\\\\\\", record_type, start, stop, \\\\\\\".\\\\\\\", strand, codon_start, \\\\\\\"Name=\\\\\\\"gene\\\\\\\";Type=\\\\\\\"type\\\\\\\";locus_tag=\\\\\\\"locus_tag\\\\\\\";product=\\\\\\\"product;\\\\n    next\\\\n}\\\\n\\\"\", \"last\": \"\\\"false\\\"\", \"infiles\": \"[{\\\"__index__\\\": 0, \\\"infile\\\": {\\\"__class__\\\": \\\"ConnectedValue\\\"}}, {\\\"__index__\\\": 1, \\\"infile\\\": {\\\"__class__\\\": \\\"ConnectedValue\\\"}}, {\\\"__index__\\\": 2, \\\"infile\\\": {\\\"__class__\\\": \\\"ConnectedValue\\\"}}, {\\\"__index__\\\": 3, \\\"infile\\\": {\\\"__class__\\\": \\\"ConnectedValue\\\"}}, {\\\"__index__\\\": 4, \\\"infile\\\": {\\\"__class__\\\": \\\"ConnectedValue\\\"}}, {\\\"__index__\\\": 5, \\\"infile\\\": {\\\"__class__\\\": \\\"ConnectedValue\\\"}}, {\\\"__index__\\\": 6, \\\"infile\\\": {\\\"__class__\\\": \\\"ConnectedValue\\\"}}, {\\\"__index__\\\": 7, \\\"infile\\\": {\\\"__class__\\\": \\\"ConnectedValue\\\"}}, {\\\"__index__\\\": 8, \\\"infile\\\": {\\\"__class__\\\": \\\"ConnectedValue\\\"}}]\", \"envs\": \"[{\\\"__index__\\\": 0, \\\"name\\\": \\\"minimum_homologous_region\\\", \\\"val\\\": \\\"${minimum_homologous_region}\\\"}, {\\\"__index__\\\": 1, \\\"name\\\": \\\"min_cluster_size\\\", \\\"val\\\": \\\"${minimum_cluster_size}\\\"}]\", \"__rerun_remap_job_id__\": null, \"infile\": \"{\\\"__class__\\\": \\\"RuntimeValue\\\"}\"}",
      "tool_version": "1.1.1",
      "type": "tool",
      "uuid": "5b09b1c5-4a40-4c38-9c8c-e350ef71b4b6",
      "workflow_outputs": [
        {
          "label": "IslandCompare Result",
          "output_name": "outfile",
          "uuid": "39eeb670-679e-4ae2-9849-ce0a69062432"
        }
      ]
    }
  },
  "tags": [],
  "uuid": "7408ddfc-2487-43b8-a8e5-5bad5d0f63c1",
  "version": 0
}
